name: release

defaults:
  run:
    shell: bash

on:
  push:
    tags:
      - v*

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow
      - uses: c-py/action-dotenv-to-setenv@v3
        with:
          env-file: .env
      - uses: actions/setup-go@v2
        with:
          go-version: "${{ env.GOLANG_VERSION }}"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: branch name
        id: branch_name
        run: |
          echo ::set-output name=MAINNET::$(./script/mainnet-from-tag.sh ${GITHUB_REF#refs/tags/})
          echo ::set-output name=RELEASE_TAG::${GITHUB_REF#refs/tags/}
      - run: echo "Building for MAINNET=${{ steps.branch_name.outputs.MAINNET }}"
      - if: (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/mainnet/main')
        name: release dry-run GORELEASER_SKIP_VALIDATE=true
        run: make release-dry-run GORELEASER_SKIP_VALIDATE=true
      - name: release dry-run
        run: make release
        env:
          RELEASE_TAG: ${{ steps.branch_name.outputs.RELEASE_TAG }}
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: release publish
        run: |
          sudo rm -rf dist
          make release
        env:
          GORELEASER_RELEASE: true
          GORELEASER_MOUNT_CONFIG: true
          MAINNET: ${{ steps.branch_name.outputs.MAINNET }}
          RELEASE_TAG: ${{ steps.branch_name.outputs.RELEASE_TAG }}
          # using PAT as homebrew is located in different repo
          GITHUB_TOKEN: ${{ secrets.GORELEASER_ACCESS_TOKEN }}

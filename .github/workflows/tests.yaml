name: tests

on:
  pull_request:
  push:
    branches:
      - master
      - mainnet/main

jobs:
  build-bins:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: git fetch --prune --unshallow
      - uses: c-py/action-dotenv-to-setenv@v3
        with:
          env-file: .env
      - uses: actions/setup-go@v3
        with:
          go-version: "${{ env.GOLANG_VERSION }}"
      - run: make bins
      - run: make docker-image

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: git fetch --prune --unshallow
      - uses: c-py/action-dotenv-to-setenv@v3
        with:
          env-file: .env
      - uses: actions/setup-go@v3
        with:
          go-version: "${{ env.GOLANG_VERSION }}"
      - run: make test-full

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: git fetch --prune --unshallow
      - uses: c-py/action-dotenv-to-setenv@v3
        with:
          env-file: .env
      - uses: actions/setup-go@v3
        with:
          go-version: "${{ env.GOLANG_VERSION }}"
      - run: make test-coverage
      - uses: codecov/codecov-action@v3

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: git fetch --prune --unshallow
      - uses: c-py/action-dotenv-to-setenv@v3
        with:
          env-file: .env
      - uses: actions/setup-go@v3
        with:
          go-version: "${{ env.GOLANG_VERSION }}"
      - run: make deps-tidy
      - run: make deps-vendor
      - run: make build
      - run: make test-vet
      - name: lint all
        run: make test-lint-all
      - name: lint make-sublinters
        run: make test-sublinters 

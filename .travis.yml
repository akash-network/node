language: go

sudo: false

git:
  depth: 50

env:
  global:
    - TEST_DELAY_THREAD_START=10ms

stages:
  - test
  - image
  - test-skipped
  - release

jobs:
  include:

    # linux/1.9: collect & submit test coverage
    - name: test
      os: linux
      go: 1.9
      script:
        - make build
        - make test-vet
        - make coverdeps-install
        - make test-cover

    # linux/1.10 (mainline): tests, integration
    - name: test
      os: linux
      go: "1.10"
      script:
        - make build
        - make test-vet
        - make test
        - make integrationdeps-install
        - make test-integration

    # linux/master: tests, integration
    - name: test
      os: linux
      go: master
      script:
        - make build
        - make test-vet
        - make test
        - make integrationdeps-install
        - make test-integration
      if: type = cron

    # osx/1.10: tests, integration, image-bins
    - name: test
      os: osx
      osx_image: xcode9.3beta
      go: "1.10"
      script:
        - make build
        - make test-vet
        - make test
        - make integrationdeps-install
        - make test-integration
      if: type = cron

    # linux/1.10 (mainline): build image
    - name: image
      os: linux
      go: "1.10"
      services: [docker]
      script:
        - make image
      if: type = cron

    # linux/1.10 (mainline): run skipped tests
    - name: test-skipped
      os: linux
      go: "1.10"
      sudo: required
      env: TEST_UNSKIP=true
      script:
        - go test -v -count=1 $(glide novendor)
      if: type = cron

    # linux/1.10 (mainline): deploy bins,docker
    - name: release
      os: linux
      go: "1.10"
      services: [docker]
      script:
        - IMAGE_REPO=ovrclk/akash make image
        - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
        - docker push ovrclk/akash:latest
        - docker tag ovrclk/akash "ovrclk/akash:$TRAVIS_TAG"
        - docker push "ovrclk/akash:$TRAVIS_TAG"
        - go get github.com/goreleaser/goreleaser
        - $GOPATH/bin/goreleaser
      if: tag =~ ^v AND fork = false

matrix:
  allow_failures:
    - env: TEST_UNSKIP=true

cache:
  directories:
    - $HOME/.glide

install:
  - mkdir -p "$GOPATH/bin"
  - curl https://glide.sh/get | sh
  - make deps-install

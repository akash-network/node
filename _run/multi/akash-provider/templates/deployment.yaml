apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "akash-provider.fullname" . }}
  labels:
    app: {{ template "akash-provider.name" . }}
    chart: {{ template "akash-provider.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    akash.network/component: provider
spec:
  selector:
    matchLabels:
      app: {{ template "akash-provider.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "akash-provider.name" . }}
        release: {{ .Release.Name }}
        akash.network/component: provider
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ "/bin/sh" , "/config/run.sh", "{{ template "akash-provider.name" . }}" ]
          env:
            - name: AKASH_DATA
              value: /data
            - name: AKASH_DEPLOYMENT_SERVICE_TYPE
              value: ClusterIP
            - name: AKASH_DEPLOYMENT_INGRESS_STATIC_HOSTS
              value: "true"
            - name: AKASH_DEPLOYMENT_INGRESS_DOMAIN
              value: "{{ .Values.deployment.ingress.domain }}"
            - name: AKASH_PROVIDER_FAKE_CAPACITY
              value: "true"
          ports:
            - containerPort: {{ .Values.provider.port }}
              name: http
          volumeMounts:
            - name: config
              mountPath: /config
            - name: data
              mountPath: /data
      volumes:
        - name: config
          configMap:
            name: {{ template "akash-provider.fullname" . }}
        - name: data
          PersistentVolumeClaim:
            claimName: {{ template "akash-provider.fullname" . }}

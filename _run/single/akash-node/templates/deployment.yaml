apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "akash-node.fullname" . }}
  labels:
    app: {{ template "akash-node.name" . }}
    chart: {{ template "akash-node.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    akash.network/component: akashd
spec:
  selector:
    matchLabels:
      app: {{ template "akash-node.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "akash-node.name" . }}
        release: {{ .Release.Name }}
        akash.network/component: akashd
    spec:
      # nodeSelector:
      #   akashnode: "true"
      # hostNetwork: true
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ "/bin/sh" , "/config/run.sh" ]
          env:
            - name: AKASHD_DATA
              value: /data
            - name: AKASHD_RPC_LADDR
              value: "tcp://0.0.0.0:{{ .Values.akashd.ports.rpc }}"
            - name: AKASHD_P2P_SEEDS
              value: "{{- range $i,$p := .Values.node.peers }}{{if $i}},{{end}}{{ $p.id }}@{{ $p.name }}-akash-node:{{ $.Values.akashd.ports.p2p }}{{- end }}"
          ports:
            - containerPort: {{ .Values.akashd.ports.p2p }}
              name: akashd-p2p
            - containerPort: {{ .Values.akashd.ports.rpc }}
              name: akashd-rpc
          volumeMounts:
            - name: config
              mountPath: /config
            - name: data
              mountPath: /data
      volumes:
        - name: config
          configMap:
            name: {{ template "akash-node.fullname" . }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ template "akash-node.fullname" . }}

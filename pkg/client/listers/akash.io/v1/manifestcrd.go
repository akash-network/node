/*
Copyright 2018 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/ovrclk/akash/pkg/apis/akash.io/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ManifestCRDLister helps list ManifestCRDs.
type ManifestCRDLister interface {
	// List lists all ManifestCRDs in the indexer.
	List(selector labels.Selector) (ret []*v1.ManifestCRD, err error)
	// ManifestCRDs returns an object that can list and get ManifestCRDs.
	ManifestCRDs(namespace string) ManifestCRDNamespaceLister
	ManifestCRDListerExpansion
}

// manifestCRDLister implements the ManifestCRDLister interface.
type manifestCRDLister struct {
	indexer cache.Indexer
}

// NewManifestCRDLister returns a new ManifestCRDLister.
func NewManifestCRDLister(indexer cache.Indexer) ManifestCRDLister {
	return &manifestCRDLister{indexer: indexer}
}

// List lists all ManifestCRDs in the indexer.
func (s *manifestCRDLister) List(selector labels.Selector) (ret []*v1.ManifestCRD, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ManifestCRD))
	})
	return ret, err
}

// ManifestCRDs returns an object that can list and get ManifestCRDs.
func (s *manifestCRDLister) ManifestCRDs(namespace string) ManifestCRDNamespaceLister {
	return manifestCRDNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ManifestCRDNamespaceLister helps list and get ManifestCRDs.
type ManifestCRDNamespaceLister interface {
	// List lists all ManifestCRDs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.ManifestCRD, err error)
	// Get retrieves the ManifestCRD from the indexer for a given namespace and name.
	Get(name string) (*v1.ManifestCRD, error)
	ManifestCRDNamespaceListerExpansion
}

// manifestCRDNamespaceLister implements the ManifestCRDNamespaceLister
// interface.
type manifestCRDNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ManifestCRDs in the indexer for a given namespace.
func (s manifestCRDNamespaceLister) List(selector labels.Selector) (ret []*v1.ManifestCRD, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ManifestCRD))
	})
	return ret, err
}

// Get retrieves the ManifestCRD from the indexer for a given namespace and name.
func (s manifestCRDNamespaceLister) Get(name string) (*v1.ManifestCRD, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("manifestcrd"), name)
	}
	return obj.(*v1.ManifestCRD), nil
}

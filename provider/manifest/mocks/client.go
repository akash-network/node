// Code generated by mockery v2.5.1. DO NOT EDIT.

package mocks

import (
	context "context"

	akashmanifest "github.com/ovrclk/akash/manifest"

	mock "github.com/stretchr/testify/mock"

	types "github.com/ovrclk/akash/x/deployment/types"
)

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// IsActive provides a mock function with given fields: _a0, _a1
func (_m *Client) IsActive(_a0 context.Context, _a1 types.DeploymentID) (bool, error) {
	ret := _m.Called(_a0, _a1)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context, types.DeploymentID) bool); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, types.DeploymentID) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Submit provides a mock function with given fields: _a0, _a1, _a2
func (_m *Client) Submit(_a0 context.Context, _a1 types.DeploymentID, _a2 akashmanifest.Manifest) error {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, types.DeploymentID, akashmanifest.Manifest) error); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

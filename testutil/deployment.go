package testutil

import (
	"math/rand"
	"testing"

	dtypes "github.com/ovrclk/akash/x/deployment/types"
)

// Deployment generates a dtype.Deployment in state `DeploymentActive`
func Deployment(t testing.TB) dtypes.Deployment {
	t.Helper()
	return dtypes.Deployment{
		DeploymentID: DeploymentID(t),
		State:        dtypes.DeploymentActive,
	}
}

// DeploymentGroup generates a dtype.DepDeploymentGroup in state `GroupOpen`
// with a set of random required attributes
func DeploymentGroup(t testing.TB, did dtypes.DeploymentID, gseq uint32) dtypes.Group {
	t.Helper()
	return dtypes.Group{
		GroupID: dtypes.MakeGroupID(did, gseq),
		State:   dtypes.GroupOpen,
		GroupSpec: dtypes.GroupSpec{
			Name:         Name(t, "dgroup"),
			Requirements: Attributes(t),
			Resources:    Resources(t),
		},
	}
}

// DeploymentGroups returns a set of deployment groups generated by DeploymentGroup
func DeploymentGroups(t testing.TB, did dtypes.DeploymentID, gseq uint32) []dtypes.Group {
	t.Helper()
	count := rand.Intn(10) + 1
	vals := make([]dtypes.Group, 0, count)
	for i := 0; i < count; i++ {
		vals = append(vals, DeploymentGroup(t, did, gseq+uint32(i)))
	}
	return vals
}

// Code generated by mockery v2.5.1. DO NOT EDIT.

package kubernetes_mocks

import (
	mock "github.com/stretchr/testify/mock"
	rest "k8s.io/client-go/rest"

	v1beta2 "k8s.io/client-go/kubernetes/typed/apps/v1beta2"
)

// AppsV1beta2Interface is an autogenerated mock type for the AppsV1beta2Interface type
type AppsV1beta2Interface struct {
	mock.Mock
}

// ControllerRevisions provides a mock function with given fields: namespace
func (_m *AppsV1beta2Interface) ControllerRevisions(namespace string) v1beta2.ControllerRevisionInterface {
	ret := _m.Called(namespace)

	var r0 v1beta2.ControllerRevisionInterface
	if rf, ok := ret.Get(0).(func(string) v1beta2.ControllerRevisionInterface); ok {
		r0 = rf(namespace)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1beta2.ControllerRevisionInterface)
		}
	}

	return r0
}

// DaemonSets provides a mock function with given fields: namespace
func (_m *AppsV1beta2Interface) DaemonSets(namespace string) v1beta2.DaemonSetInterface {
	ret := _m.Called(namespace)

	var r0 v1beta2.DaemonSetInterface
	if rf, ok := ret.Get(0).(func(string) v1beta2.DaemonSetInterface); ok {
		r0 = rf(namespace)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1beta2.DaemonSetInterface)
		}
	}

	return r0
}

// Deployments provides a mock function with given fields: namespace
func (_m *AppsV1beta2Interface) Deployments(namespace string) v1beta2.DeploymentInterface {
	ret := _m.Called(namespace)

	var r0 v1beta2.DeploymentInterface
	if rf, ok := ret.Get(0).(func(string) v1beta2.DeploymentInterface); ok {
		r0 = rf(namespace)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1beta2.DeploymentInterface)
		}
	}

	return r0
}

// RESTClient provides a mock function with given fields:
func (_m *AppsV1beta2Interface) RESTClient() rest.Interface {
	ret := _m.Called()

	var r0 rest.Interface
	if rf, ok := ret.Get(0).(func() rest.Interface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(rest.Interface)
		}
	}

	return r0
}

// ReplicaSets provides a mock function with given fields: namespace
func (_m *AppsV1beta2Interface) ReplicaSets(namespace string) v1beta2.ReplicaSetInterface {
	ret := _m.Called(namespace)

	var r0 v1beta2.ReplicaSetInterface
	if rf, ok := ret.Get(0).(func(string) v1beta2.ReplicaSetInterface); ok {
		r0 = rf(namespace)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1beta2.ReplicaSetInterface)
		}
	}

	return r0
}

// StatefulSets provides a mock function with given fields: namespace
func (_m *AppsV1beta2Interface) StatefulSets(namespace string) v1beta2.StatefulSetInterface {
	ret := _m.Called(namespace)

	var r0 v1beta2.StatefulSetInterface
	if rf, ok := ret.Get(0).(func(string) v1beta2.StatefulSetInterface); ok {
		r0 = rf(namespace)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(v1beta2.StatefulSetInterface)
		}
	}

	return r0
}

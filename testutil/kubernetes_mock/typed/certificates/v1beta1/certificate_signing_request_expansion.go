// Code generated by mockery v2.5.1. DO NOT EDIT.

package kubernetes_mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"

	v1beta1 "k8s.io/api/certificates/v1beta1"
)

// CertificateSigningRequestExpansion is an autogenerated mock type for the CertificateSigningRequestExpansion type
type CertificateSigningRequestExpansion struct {
	mock.Mock
}

// UpdateApproval provides a mock function with given fields: ctx, certificateSigningRequest, opts
func (_m *CertificateSigningRequestExpansion) UpdateApproval(ctx context.Context, certificateSigningRequest *v1beta1.CertificateSigningRequest, opts v1.UpdateOptions) (*v1beta1.CertificateSigningRequest, error) {
	ret := _m.Called(ctx, certificateSigningRequest, opts)

	var r0 *v1beta1.CertificateSigningRequest
	if rf, ok := ret.Get(0).(func(context.Context, *v1beta1.CertificateSigningRequest, v1.UpdateOptions) *v1beta1.CertificateSigningRequest); ok {
		r0 = rf(ctx, certificateSigningRequest, opts)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1beta1.CertificateSigningRequest)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *v1beta1.CertificateSigningRequest, v1.UpdateOptions) error); ok {
		r1 = rf(ctx, certificateSigningRequest, opts)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

syntax = "proto3";

package types;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.stable_marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.gostring_all) = true;
option (gogoproto.goproto_stringer_all) = true;

//option (gogoproto.stringer_all) = true;

/* BEGIN GLOBAL */
message Genesis {
  repeated Account accounts = 1 [(gogoproto.nullable) = false];
}

message Tx {
  bytes key         = 1 [(gogoproto.customtype)="github.com/ovrclk/akash/types/base.PubKey"];
  bytes signature   = 2 [(gogoproto.customtype)="github.com/ovrclk/akash/types/base.Signature"];
  TxPayload payload = 3 [(gogoproto.nullable) = false];
}

message TxPayload {
  uint64 nonce = 1;
  oneof payload {
    TxSend                   txSend                   = 2;
    TxCreateDeployment       txCreateDeployment       = 3;
    TxCreateOrder            txCreateOrder            = 4;
    TxCreateFulfillment      txCreateFulfillment      = 5;
    TxCreateLease            txCreateLease            = 6;
    TxCreateProvider         txCreateProvider         = 7;
    TxCloseDeployment        txCloseDeployment        = 8;
    TxDeploymentClosed       txDeploymentClosed       = 9;
  }
}
/* END GLOBAL */

/* BEGIN ACCOUNT */
message Account {
  // wait for https://github.com/gogo/protobuf/pull/227
  // bytes address = 1  [(gogoproto.customtype) = "github.com/tendermint/go-wire/data.Bytes", (gogoproto.nullable) = false];
  option (gogoproto.compare) = true;
  bytes  address = 1 [(gogoproto.customtype)="github.com/ovrclk/akash/types/base.Bytes",(gogoproto.nullable) = false];
  uint64 balance = 2;
  uint64 nonce   = 3;
}

message TxSend {
  bytes  from   = 1 [(gogoproto.customtype)="github.com/ovrclk/akash/types/base.Bytes",(gogoproto.nullable) = false];
  bytes  to     = 2 [(gogoproto.customtype)="github.com/ovrclk/akash/types/base.Bytes",(gogoproto.nullable) = false];
  uint64 amount = 3;
}
/* END ACCOUNT */

/* BEGIN PROVIDER */

message Provider {
  option (gogoproto.compare) = true;
  bytes  address = 1 [(gogoproto.customtype)="github.com/ovrclk/akash/types/base.Bytes",(gogoproto.nullable) = false];
  bytes  owner = 2 [(gogoproto.customtype)="github.com/ovrclk/akash/types/base.Bytes",(gogoproto.nullable) = false];
  repeated ProviderAttribute attributes = 3 [(gogoproto.nullable) = false];
}

message Providers {
  repeated Provider providers = 1 [(gogoproto.nullable) = false];
}

message TxCreateProvider {
  Provider provider = 1 [(gogoproto.nullable) = false];
}

/* END PROVIDER */

/* BEGIN EXCHANGE */
message ResourceUnit {
  option (gogoproto.compare) = true;
  uint32 cpu    = 1;
  uint32 memory = 2;
  uint64 disk   = 3;
}

message ResourceGroup {
  option (gogoproto.compare) = true;
  ResourceUnit unit  = 1 [(gogoproto.nullable) = false];
  uint32       count = 2;
  uint32       price = 3; // price per unit.
}

message ProviderAttribute {
  option (gogoproto.compare) = true;
  string name  = 1;
  string value = 2;
}

message DeploymentGroup {
  option (gogoproto.compare) = true;

  /* BEGIN ID FIELDS */

  // deployment address
  bytes  deployment = 1 [(gogoproto.customtype)="github.com/ovrclk/akash/types/base.Bytes",(gogoproto.nullable) = false];

  // unique sequence over deployment
  uint64 seq = 2;

  /* END ID FIELDS */

  DeploymentGroupState state = 3;
  enum DeploymentGroupState {
    OPEN    = 0;
    ORDERED = 1;
    CLOSING = 2;
    CLOSED  = 3;
  }

  repeated ProviderAttribute requirements = 4 [(gogoproto.nullable) = false];
  repeated ResourceGroup     resources    = 5 [(gogoproto.nullable) = false];

}

message DeploymentGroups {
  repeated DeploymentGroup items = 1 [(gogoproto.nullable) = false];
}

message Deployment {
  option (gogoproto.compare) = true;

  /* BEGIN ID FIELDS */
  bytes  address = 1 [(gogoproto.customtype)="github.com/ovrclk/akash/types/base.Bytes",(gogoproto.nullable) = false];
  /* END ID FIELDS */

  bytes  tenant  = 2 [(gogoproto.customtype)="github.com/ovrclk/akash/types/base.Bytes",(gogoproto.nullable) = false];
  enum DeploymentState {
    ACTIVE  = 0;
    CLOSING = 1;
    CLOSED  = 2;
  }
  DeploymentState state = 3;
}

message Deployments {
  repeated Deployment items = 1 [(gogoproto.nullable) = false];
}

message TxCreateDeployment {
  Deployment deployment = 1;
  DeploymentGroups groups = 2;
}

message Order {
  option (gogoproto.compare) = true;

  /* BEGIN ID FIELDS */

  // deployment address
  bytes deployment = 1 [(gogoproto.customtype)="github.com/ovrclk/akash/types/base.Bytes",(gogoproto.nullable) = false];

  // deployment group sequence
  uint64 group = 2;

  // order sequence
  uint64 order = 3;

  /* END ID FIELDS */

  enum OrderState {
    OPEN    = 0;
    MATCHED = 1;
    CLOSING = 2;
    CLOSED  = 3;
  }
  OrderState state = 4;
}

message TxCreateOrder {
  Order order = 1;
}

message Orders {
  repeated Order items = 1;
}

message Fulfillment {
  option (gogoproto.compare) = true;

  /* BEGIN ID FIELDS */

  // deployment address
  bytes deployment = 1 [(gogoproto.customtype)="github.com/ovrclk/akash/types/base.Bytes",(gogoproto.nullable) = false];

  // deployment group sequence
  uint64 group = 2;

  // order sequence
  uint64 order = 3;

  // provider address
  bytes provider = 4 [(gogoproto.customtype)="github.com/ovrclk/akash/types/base.Bytes",(gogoproto.nullable) = false];

  uint32 price = 5;

  /* END ID FIELDS */

  enum FulfillmentState {
    OPEN    = 0;
    MATCHED = 1;
    CLOSING = 2;
    CLOSED  = 3;
  }
  FulfillmentState state = 6;
}

message TxCreateFulfillment {
  Fulfillment fulfillment = 1;
}

message Lease {
  /* BEGIN ID FIELDS */

  // deployment address
  bytes deployment = 1 [(gogoproto.customtype)="github.com/ovrclk/akash/types/base.Bytes",(gogoproto.nullable) = false];

  // deployment group sequence
  uint64 group = 2;

  // order sequence
  uint64 order = 3;

  // provider address
  bytes provider = 4 [(gogoproto.customtype)="github.com/ovrclk/akash/types/base.Bytes",(gogoproto.nullable) = false];

  // price of matching fulfillment
  uint32 price = 5;

  /* END ID FIELDS */

  enum LeaseState {
    ACTIVE  = 0;
    CLOSING = 1;
    CLOSED  = 2;
  }
  LeaseState state = 6;
}

message TxCreateLease {
  Lease lease = 1;
}

message TxCloseDeployment {
  /* BEGIN ID FIELDS */

  // deployment address
  bytes deployment = 1 [(gogoproto.customtype)="github.com/ovrclk/akash/types/base.Bytes",(gogoproto.nullable) = false];

  /* END ID FIELDS */
}

message TxDeploymentClosed {
  /* BEGIN ID FIELDS */

  // deployment address
  bytes deployment = 1 [(gogoproto.customtype)="github.com/ovrclk/akash/types/base.Bytes",(gogoproto.nullable) = false];

  /* END ID FIELDS */
}

/* END EXCHANGE */
